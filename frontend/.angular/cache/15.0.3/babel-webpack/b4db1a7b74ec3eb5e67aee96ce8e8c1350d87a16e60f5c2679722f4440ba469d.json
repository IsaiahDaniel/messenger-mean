{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/http.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/card\";\nfunction PostCreateComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Post Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostCreateComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Content is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PostCreateComponent {\n  constructor(router, http, activatedRoute) {\n    this.router = router;\n    this.http = http;\n    this.activatedRoute = activatedRoute;\n    this.postId = \"\";\n    this.post = {};\n    this.mode = \"create\";\n    this.newPost = new EventEmitter();\n  }\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(params => {\n      if (params.get(\"id\")) {\n        this.mode = \"edit\";\n        this.post = \"\";\n        this.postId = params.get(\"id\");\n      } else {\n        console.log(\"id dosent exists\");\n        this.mode = \"edit\";\n      }\n    });\n    getPost();\n  }\n  onCreatePost(form) {\n    if (form.invalid) return;\n    if (this.mode === \"create\") {\n      this.http.post(\"posts\", {\n        title: form.value.title,\n        content: form.value.content\n      }, data => {\n        if (data.success) {\n          console.log(\"sent\");\n        }\n      });\n    } else if (this.mode === \"edit\") {\n      this.http.patch(\"posts\", {\n        title: form.value.title,\n        content: form.value.content\n      }, data => {\n        if (data.success) {\n          console.log(\"sent\");\n        }\n      });\n    }\n    form.resetForm();\n  }\n  getPost() {\n    this.http.get(\"posts\");\n  }\n}\nPostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) {\n  return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nPostCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostCreateComponent,\n  selectors: [[\"app-post-create\"]],\n  outputs: {\n    newPost: \"newPost\"\n  },\n  decls: 17,\n  vars: 2,\n  consts: [[1, \"container\"], [3, \"submit\"], [\"postForm\", \"ngForm\"], [\"type\", \"text\", \"placeholder\", \"Post title\", \"matInput\", \"\", \"name\", \"title\", \"ngModel\", \"\", \"required\", \"\"], [\"title\", \"ngModel\"], [4, \"ngIf\"], [\"placeholder\", \"Post content\", \"id\", \"content\", \"cols\", \"30\", \"rows\", \"10\", \"name\", \"content\", \"ngModel\", \"\", \"matInput\", \"\", \"required\", \"\"], [\"content\", \"ngModel\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\"]],\n  template: function PostCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"mat-card\")(2, \"mat-card-content\")(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"submit\", function PostCreateComponent_Template_form_submit_3_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.onCreatePost(_r0));\n      });\n      i0.ɵɵelementStart(5, \"mat-form-field\");\n      i0.ɵɵelement(6, \"input\", 3, 4);\n      i0.ɵɵtemplate(8, PostCreateComponent_mat_error_8_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"mat-form-field\");\n      i0.ɵɵelement(11, \"textarea\", 6, 7);\n      i0.ɵɵtemplate(13, PostCreateComponent_mat_error_13_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"button\", 8);\n      i0.ɵɵtext(16, \"Save Post\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(7);\n      const _r3 = i0.ɵɵreference(12);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", _r1 == null ? null : _r1.invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", _r3 == null ? null : _r3.invalid);\n    }\n  },\n  dependencies: [i3.MatFormField, i3.MatError, i4.MatInput, i5.MatButton, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i7.NgIf, i8.MatCard, i8.MatCardContent],\n  styles: [\"mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  background-color: transparent !important;\\n}\\n/*# sourceURL=webpack://./src/app/components/post-create/post-create.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wb3N0LWNyZWF0ZS9wb3N0LWNyZWF0ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7QUFDSjs7QUFFQTtFQUNJLHdDQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5pbnB1dCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAwB,eAAe;;;;;;;;;;;;ICc7DC,iCAAkC;IAAAA,sCAAsB;IAAAA,iBAAY;;;;;IAiBpEA,iCAAoC;IAAAA,mCAAmB;IAAAA,iBAAY;;;ADpB7E,OAAM,MAAOC,mBAAmB;EAM5BC,YAAoBC,MAAc,EAAUC,IAAiB,EAAUC,cAA8B;IAAjF,WAAM,GAANF,MAAM;IAAkB,SAAI,GAAJC,IAAI;IAAuB,mBAAc,GAAdC,cAAc;IALrF,WAAM,GAAQ,EAAE;IAChB,SAAI,GAAG,EAAE;IACT,SAAI,GAAG,QAAQ;IACL,YAAO,GAAG,IAAIN,YAAY,EAAO;EAE4D;EAEvGO,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,QAAQ,CAACC,SAAS,CAAEC,MAAgB,IAAI;MAC1D,IAAGA,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC,EAAC;QAClB,IAAI,CAACC,IAAI,GAAG,MAAM;QAClB,IAAI,CAACC,IAAI,GAAG,EAAE;QACd,IAAI,CAACC,MAAM,GAAGJ,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;OAC/B,MAAK;QACJI,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,IAAI,CAACJ,IAAI,GAAG,MAAM;;IAEtB,CAAC,CAAC;IAEFK,OAAO,EAAE;EAEX;EAEAC,YAAY,CAACC,IAAY;IACvB,IAAIA,IAAI,CAACC,OAAO,EAAE;IAElB,IAAG,IAAI,CAACR,IAAI,KAAK,QAAQ,EAAC;MACxB,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,OAAO,EAAE;QAACQ,KAAK,EAAEF,IAAI,CAACG,KAAK,CAACD,KAAK;QAAEE,OAAO,EAAEJ,IAAI,CAACG,KAAK,CAACC;MAAO,CAAC,EAAGC,IAAS,IAAI;QAC5F,IAAGA,IAAI,CAACC,OAAO,EAAC;UACdV,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;;MAEvB,CAAC,CAAC;KACH,MAAK,IAAG,IAAI,CAACJ,IAAI,KAAK,MAAM,EAAC;MAC5B,IAAI,CAACP,IAAI,CAACqB,KAAK,CAAC,OAAO,EAAE;QAACL,KAAK,EAAEF,IAAI,CAACG,KAAK,CAACD,KAAK;QAAEE,OAAO,EAAEJ,IAAI,CAACG,KAAK,CAACC;MAAO,CAAC,EAAGC,IAAS,IAAI;QAC7F,IAAGA,IAAI,CAACC,OAAO,EAAC;UACdV,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;;MAEvB,CAAC,CAAC;;IAGJG,IAAI,CAACQ,SAAS,EAAE;EAClB;EAEAV,OAAO;IACL,IAAI,CAACZ,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC;EACxB;;AA9CST,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA0B;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCXhCjC,kCAA2B;MAGIA;QAAAA;QAAA;QAAA,OAAUA,oCAAsB;MAAA,EAAC;MACxDA,sCAAgB;MACdA,8BAQE;MACFA,gFAAoE;MACtEA,iBAAiB;MAEjBA,qBAAI;MAEJA,uCAAgB;MACdA,kCAUY;MACZA,kFAAmE;MACrEA,iBAAiB;MAEjBA,sBAAI;MAEJA,kCAAwD;MAAAA,0BAAS;MAAAA,iBAAS;;;;;MAtB5DA,eAAoB;MAApBA,uDAAoB;MAiBpBA,eAAsB;MAAtBA,uDAAsB","names":["EventEmitter","i0","PostCreateComponent","constructor","router","http","activatedRoute","ngOnInit","paramMap","subscribe","params","get","mode","post","postId","console","log","getPost","onCreatePost","form","invalid","title","value","content","data","success","patch","resetForm","selectors","outputs","newPost","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/mac/Documents/messages-social/frontend/src/app/components/post-create/post-create.component.ts","/Users/mac/Documents/messages-social/frontend/src/app/components/post-create/post-create.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Post } from 'src/app/interfaces/posts.model';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.scss']\n})\nexport class PostCreateComponent implements OnInit {\n    postId: any = \"\";\n    post = {};\n    mode = \"create\";\n    @Output() newPost = new EventEmitter<any>();\n\n    constructor(private router: Router, private http: HttpService, private activatedRoute: ActivatedRoute){}\n\n    ngOnInit(): void {\n      this.activatedRoute.paramMap.subscribe((params: ParamMap) => {\n        if(params.get(\"id\")){\n          this.mode = \"edit\";\n          this.post = \"\";\n          this.postId = params.get(\"id\");\n        }else {\n          console.log(\"id dosent exists\");\n          this.mode = \"edit\";\n        }\n      })\n\n      getPost();\n\n    }\n\n    onCreatePost(form: NgForm){\n      if (form.invalid) return;\n\n      if(this.mode === \"create\"){\n        this.http.post(\"posts\", {title: form.value.title, content: form.value.content}, (data: any) => {\n          if(data.success){\n            console.log(\"sent\");\n          }\n        });\n      }else if(this.mode === \"edit\"){\n        this.http.patch(\"posts\", {title: form.value.title, content: form.value.content}, (data: any) => {\n          if(data.success){\n            console.log(\"sent\");\n          }\n        });\n      }\n\n      form.resetForm();\n    }\n\n    getPost(){\n      this.http.get(\"posts\")\n    }\n\n\n}\n","<section class=\"container\">\n  <mat-card>\n    <mat-card-content>\n      <form #postForm=\"ngForm\" (submit)=\"onCreatePost(postForm)\">\n        <mat-form-field>\n          <input\n            type=\"text\"\n            placeholder=\"Post title\"\n            matInput\n            name=\"title\"\n            ngModel\n            required\n            #title=\"ngModel\"\n          />\n          <mat-error *ngIf=\"title?.invalid\">Post Title is required</mat-error>\n        </mat-form-field>\n\n        <br>\n\n        <mat-form-field>\n          <textarea\n            placeholder=\"Post content\"\n            id=\"content\"\n            cols=\"30\"\n            rows=\"10\"\n            name=\"content\"\n            ngModel\n            matInput\n            required\n            #content=\"ngModel\"\n          ></textarea>\n          <mat-error *ngIf=\"content?.invalid\">Content is required</mat-error>\n        </mat-form-field>\n\n        <br>\n\n        <button type=\"submit\" mat-raised-button color=\"primary\">Save Post</button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</section>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}