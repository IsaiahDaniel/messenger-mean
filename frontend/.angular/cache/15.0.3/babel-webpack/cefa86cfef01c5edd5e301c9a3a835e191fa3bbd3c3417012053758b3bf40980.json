{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nlet PostCreateComponent = class PostCreateComponent {\n  constructor(router, http, activatedRoute) {\n    this.router = router;\n    this.http = http;\n    this.activatedRoute = activatedRoute;\n    this.postId = \"\";\n    this.post = {};\n    this.mode = \"create\";\n    this.newPost = new EventEmitter();\n  }\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(params => {\n      if (params.get(\"id\")) {\n        this.mode = \"edit\";\n        this.post = \"\";\n        this.postId = params.get(\"id\");\n      } else {\n        console.log(\"id dosent exists\");\n        this.mode = \"edit\";\n      }\n    });\n    this.getPost();\n  }\n  onCreatePost(form) {\n    if (form.invalid) return;\n    if (this.mode === \"create\") {\n      this.http.post(\"posts\", {\n        title: form.value.title,\n        content: form.value.content\n      }, data => {\n        if (data.success) {\n          console.log(\"sent\");\n        }\n      });\n    } else if (this.mode === \"edit\") {\n      this.http.patch(\"posts\", {\n        title: form.value.title,\n        content: form.value.content\n      }, data => {\n        if (data.success) {\n          console.log(\"sent\");\n        }\n      });\n    }\n    form.resetForm();\n  }\n  getPost() {\n    this.http.get(`posts/${this.postId}`, data => {\n      this.post = data.data;\n    });\n  }\n};\n__decorate([Output()], PostCreateComponent.prototype, \"newPost\", void 0);\nPostCreateComponent = __decorate([Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.scss']\n})], PostCreateComponent);\nexport { PostCreateComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAUC,MAAM,QAAQ,eAAe;AAWhE,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAM5BC,YAAoBC,MAAc,EAAUC,IAAiB,EAAUC,cAA8B;IAAjF,WAAM,GAANF,MAAM;IAAkB,SAAI,GAAJC,IAAI;IAAuB,mBAAc,GAAdC,cAAc;IALrF,WAAM,GAAQ,EAAE;IAChB,SAAI,GAAG,EAAE;IACT,SAAI,GAAG,QAAQ;IACL,YAAO,GAAG,IAAIN,YAAY,EAAO;EAE4D;EAEvGO,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,QAAQ,CAACC,SAAS,CAAEC,MAAgB,IAAI;MAC1D,IAAGA,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC,EAAC;QAClB,IAAI,CAACC,IAAI,GAAG,MAAM;QAClB,IAAI,CAACC,IAAI,GAAG,EAAE;QACd,IAAI,CAACC,MAAM,GAAGJ,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;OAC/B,MAAK;QACJI,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,IAAI,CAACJ,IAAI,GAAG,MAAM;;IAEtB,CAAC,CAAC;IAEH,IAAI,CAACK,OAAO,EAAE;EAEf;EAEAC,YAAY,CAACC,IAAY;IACvB,IAAIA,IAAI,CAACC,OAAO,EAAE;IAElB,IAAG,IAAI,CAACR,IAAI,KAAK,QAAQ,EAAC;MACxB,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,OAAO,EAAE;QAACQ,KAAK,EAAEF,IAAI,CAACG,KAAK,CAACD,KAAK;QAAEE,OAAO,EAAEJ,IAAI,CAACG,KAAK,CAACC;MAAO,CAAC,EAAGC,IAAS,IAAI;QAC5F,IAAGA,IAAI,CAACC,OAAO,EAAC;UACdV,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;;MAEvB,CAAC,CAAC;KACH,MAAK,IAAG,IAAI,CAACJ,IAAI,KAAK,MAAM,EAAC;MAC5B,IAAI,CAACP,IAAI,CAACqB,KAAK,CAAC,OAAO,EAAE;QAACL,KAAK,EAAEF,IAAI,CAACG,KAAK,CAACD,KAAK;QAAEE,OAAO,EAAEJ,IAAI,CAACG,KAAK,CAACC;MAAO,CAAC,EAAGC,IAAS,IAAI;QAC7F,IAAGA,IAAI,CAACC,OAAO,EAAC;UACdV,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;;MAEvB,CAAC,CAAC;;IAGJG,IAAI,CAACQ,SAAS,EAAE;EAClB;EAEAV,OAAO;IACL,IAAI,CAACZ,IAAI,CAACM,GAAG,CAAC,SAAS,IAAI,CAACG,MAAM,EAAE,EAAGU,IAAS,IAAI;MAClD,IAAI,CAACX,IAAI,GAAGW,IAAI,CAACA,IAAI;IACvB,CAAC,CAAC;EACJ;CAGH;AA/CaI,YAAT3B,MAAM,EAAE,oDAAmC;AAJnCC,mBAAmB,eAL/BH,SAAS,CAAC;EACT8B,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACW7B,mBAAmB,CAmD/B;SAnDYA,mBAAmB","names":["Component","EventEmitter","Output","PostCreateComponent","constructor","router","http","activatedRoute","ngOnInit","paramMap","subscribe","params","get","mode","post","postId","console","log","getPost","onCreatePost","form","invalid","title","value","content","data","success","patch","resetForm","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/mac/Documents/messages-social/frontend/src/app/components/post-create/post-create.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Post } from 'src/app/interfaces/posts.model';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.scss']\n})\nexport class PostCreateComponent implements OnInit {\n    postId: any = \"\";\n    post = {};\n    mode = \"create\";\n    @Output() newPost = new EventEmitter<any>();\n\n    constructor(private router: Router, private http: HttpService, private activatedRoute: ActivatedRoute){}\n\n    ngOnInit(): void {\n      this.activatedRoute.paramMap.subscribe((params: ParamMap) => {\n        if(params.get(\"id\")){\n          this.mode = \"edit\";\n          this.post = \"\";\n          this.postId = params.get(\"id\");\n        }else {\n          console.log(\"id dosent exists\");\n          this.mode = \"edit\";\n        }\n      })\n\n     this.getPost();\n\n    }\n\n    onCreatePost(form: NgForm){\n      if (form.invalid) return;\n\n      if(this.mode === \"create\"){\n        this.http.post(\"posts\", {title: form.value.title, content: form.value.content}, (data: any) => {\n          if(data.success){\n            console.log(\"sent\");\n          }\n        });\n      }else if(this.mode === \"edit\"){\n        this.http.patch(\"posts\", {title: form.value.title, content: form.value.content}, (data: any) => {\n          if(data.success){\n            console.log(\"sent\");\n          }\n        });\n      }\n\n      form.resetForm();\n    }\n\n    getPost(){\n      this.http.get(`posts/${this.postId}`, (data: any) => {\n        this.post = data.data;\n      })\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}