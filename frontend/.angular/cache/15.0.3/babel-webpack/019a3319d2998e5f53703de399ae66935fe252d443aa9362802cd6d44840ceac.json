{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/http.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/expansion\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/material/paginator\";\nfunction PostsListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"mat-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostsListComponent_div_1_mat_expansion_panel_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 5);\n    i0.ɵɵlistener(\"opened\", function PostsListComponent_div_1_mat_expansion_panel_2_Template_mat_expansion_panel_opened_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.panelOpenState = true);\n    })(\"closed\", function PostsListComponent_div_1_mat_expansion_panel_2_Template_mat_expansion_panel_closed_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.panelOpenState = false);\n    });\n    i0.ɵɵelementStart(1, \"mat-expansion-panel-header\")(2, \"mat-panel-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵelement(7, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-action-row\")(9, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function PostsListComponent_div_1_mat_expansion_panel_2_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const post_r4 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.deletePost(post_r4 == null ? null : post_r4._id));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function PostsListComponent_div_1_mat_expansion_panel_2_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const post_r4 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.editPost(post_r4 == null ? null : post_r4._id));\n    });\n    i0.ɵɵtext(12, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const post_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(post_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r4.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", post_r4.image, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction PostsListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"mat-accordion\");\n    i0.ɵɵtemplate(2, PostsListComponent_div_1_mat_expansion_panel_2_Template, 13, 3, \"mat-expansion-panel\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-paginator\", 4);\n    i0.ɵɵlistener(\"page\", function PostsListComponent_div_1_Template_mat_paginator_page_3_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onChangePage($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.posts);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pageSize\", ctx_r1.pageSize)(\"length\", ctx_r1.totalPage)(\"pageSizeOptions\", ctx_r1.pageSizeOptions);\n  }\n}\nfunction PostsListComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 10);\n    i0.ɵɵtext(1, \"No Posts yet\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PostsListComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.panelOpenState = false;\n    this.postDeleted = new EventEmitter();\n    this.posts = [];\n    this.pageSize = 3;\n    this.totalPage = 10;\n    this.currentIndex = 1;\n    this.pageSizeOptions = [1, 3, 5, 10];\n    this.isLoading = true;\n  }\n  ngOnInit() {\n    this.getPosts();\n  }\n  onChangePage(pageData) {\n    console.log(\"pageData\", pageData);\n    this.currentIndex = pageData.pageIndex;\n    this.pageSize = pageData.pageSize;\n    this.getPosts();\n  }\n  getPosts() {\n    this.isLoading = true;\n    this.http.search(\"posts\", {\n      pageSize: this.pageSize,\n      page: this.currentIndex\n    }, data => {\n      if (data.success) {\n        this.posts = data.data;\n        this.isLoading = false;\n        console.log(\"this.posts\", this.posts);\n        // this.totalPage = data.data.length;\n      }\n    });\n  }\n\n  deletePost(id) {\n    this.http.delete(`posts/${id}`, data => {\n      if (data.success) {\n        this.getPosts();\n      }\n    });\n  }\n  editPost(post) {\n    this.router.navigateByUrl(`/edit/${post}`);\n  }\n}\nPostsListComponent.ɵfac = function PostsListComponent_Factory(t) {\n  return new (t || PostsListComponent)(i0.ɵɵdirectiveInject(i1.HttpService), i0.ɵɵdirectiveInject(i2.Router));\n};\nPostsListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostsListComponent,\n  selectors: [[\"app-posts-list\"]],\n  outputs: {\n    postDeleted: \"postDeleted\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [\"class\", \"text-center\", 4, \"ngIf\"], [3, \"opened\", \"closed\", 4, \"ngFor\", \"ngForOf\"], [3, \"pageSize\", \"length\", \"pageSizeOptions\", \"page\"], [3, \"opened\", \"closed\"], [1, \"image-wrapper\"], [\"alt\", \"\", 3, \"src\"], [\"mat-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"text-center\"]],\n  template: function PostsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PostsListComponent_div_0_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, PostsListComponent_div_1_Template, 4, 4, \"div\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtemplate(3, PostsListComponent_p_3_Template, 2, 0, \"p\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.posts.length);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.posts.length);\n    }\n  },\n  dependencies: [i3.MatAccordion, i3.MatExpansionPanel, i3.MatExpansionPanelActionRow, i3.MatExpansionPanelHeader, i3.MatExpansionPanelTitle, i4.MatButton, i5.NgForOf, i5.NgIf, i6.MatProgressSpinner, i7.MatPaginator],\n  styles: [\".image-wrapper[_ngcontent-%COMP%] {\\n  width: 50%;\\n  height: 200%;\\n}\\n\\n.image-wrapper[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nmat-paginator[_ngcontent-%COMP%] {\\n  margin-top: 1rem;\\n}\\n/*# sourceURL=webpack://./src/app/components/posts-list/posts-list.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wb3N0cy1saXN0L3Bvc3RzLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUVBO0VBQ0ksV0FBQTtBQUNKOztBQUVBO0VBQ0ksZ0JBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5pbWFnZS13cmFwcGVyIHtcbiAgd2lkdGg6IDUwJTtcbiAgaGVpZ2h0OiAyMDAlO1xufVxuXG4uaW1hZ2Utd3JhcHBlciBpbWcge1xuICB3aWR0aDogMTAwJTtcbn1cblxubWF0LXBhZ2luYXRvciB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","PostsListComponent","constructor","http","router","ngOnInit","getPosts","onChangePage","pageData","console","log","currentIndex","pageIndex","pageSize","isLoading","search","page","data","success","posts","deletePost","id","delete","editPost","post","navigateByUrl","selectors","outputs","postDeleted","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/mac/Documents/messages-social/frontend/src/app/components/posts-list/posts-list.component.ts","/Users/mac/Documents/messages-social/frontend/src/app/components/posts-list/posts-list.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { Post } from 'src/app/interfaces/posts.model';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-posts-list',\n  templateUrl: './posts-list.component.html',\n  styleUrls: ['./posts-list.component.scss']\n})\nexport class PostsListComponent implements OnInit {\n  panelOpenState = false;\n\n  @Output() postDeleted = new EventEmitter();\n  posts: Post[] = [];\n  pageSize = 3;\n  totalPage = 10;\n  currentIndex = 1;\n  pageSizeOptions: any[] = [1, 3, 5, 10]\n  isLoading:boolean = true;\n\n  constructor(private http: HttpService, private router: Router){}\n\n  ngOnInit(): void {\n    this.getPosts();  \n  }\n\n  onChangePage(pageData: PageEvent){\n    console.log(\"pageData\", pageData);\n    this.currentIndex = pageData.pageIndex;\n    this.pageSize = pageData.pageSize;\n\n    this.getPosts();\n  }\n\n  getPosts(){\n    this.isLoading = true;\n    this.http.search(\"posts\", { pageSize: this.pageSize, page: this.currentIndex } ,(data: any) => {\n      if(data.success){\n        this.posts = data.data;\n        this.isLoading = false;\n        console.log(\"this.posts\", this.posts);\n        // this.totalPage = data.data.length;\n      }\n    })\n  }\n\n  deletePost(id: any){\n    this.http.delete(`posts/${id}`, (data: any) => {\n      if(data.success){\n        this.getPosts();\n      }\n    })\n  }\n\n  editPost(post: any){\n    this.router.navigateByUrl(`/edit/${post}`)\n  }\n\n}\n","<div class=\"container\" *ngIf=\"isLoading\">\n  <mat-spinner></mat-spinner>\n</div>\n\n\n<div class=\"container\" *ngIf=\"posts.length\">\n  <mat-accordion>\n    <mat-expansion-panel\n      (opened)=\"panelOpenState = true\"\n      (closed)=\"panelOpenState = false\"\n      *ngFor=\"let post of posts\"\n    >\n      <mat-expansion-panel-header>\n        <mat-panel-title>{{ post.title }}</mat-panel-title>\n        <!-- <mat-panel-description> Post Description </mat-panel-description> -->\n      </mat-expansion-panel-header>\n      <p>{{ post.content }}</p>\n      <div class=\"image-wrapper\">\n        <img [src]=\"post.image\" alt=\"\">\n      </div>\n      <mat-action-row>\n        <button mat-button color=\"accent\" (click)=\"deletePost(post?._id)\">Delete</button>\n        <button mat-button color=\"primary\" (click)=\"editPost(post?._id)\">Edit</button>\n      </mat-action-row>\n    </mat-expansion-panel>\n  </mat-accordion>\n  <mat-paginator [pageSize]=\"pageSize\" [length]=\"totalPage\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"onChangePage($event)\"></mat-paginator>\n</div>\n\n<div class=\"container\">\n  <p *ngIf=\"!posts.length\" class=\"text-center\">No Posts yet</p>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}